---
"$schema": https://json-schema.org/draft/2020-12/schema
title: Product
type: object
properties:

  ### ID ###
  id:
    type: integer # Use valid JSON Schema types: https://json-schema.org/understanding-json-schema/reference/type

    ProdDB: # Name of the system. Must match a name in systems.yaml
      search_key: true # Can we use this field to search for this object, in this system?
      receive_from: true # Receive this field from the system? False if blank
      location:
        database: prod
        schema: public
        table: products
        column: id

    PaymentGateway: # Name of the system. Must match a name in systems.yaml
      push_to: true # Push this field to the system? False if blank
      require_for_create: true # Is this field required to create an object in the system?
      location:
        object: product
        field: metadata.id # Using Stripe's metadata to store the ID
    
    DataWarehouse:
      search_key: true
      push_to: true
      require_for_create: true
      location: 
        database: analytics
        schema: public
        table: products
        column: id

  ### Stripe ID ###
  stripe_id:
    type: string

    ProdDB:
      search_key: true
      push_to: true
      require_for_create: true
      location:
        database: prod
        schema: public
        table: products
        column: stripe_id

    PaymentGateway:
      search_key: true
      receive_from: true
      location:
        object: product
        field: id

    DataWarehouse:
      search_key: true
      push_to: true
      require_for_create: true
      location:
        database: analytics
        schema: public
        table: products
        column: stripe_id
      
  ### Name ###
  name:
    type: string

    ProdDB:
      push_to: true
      receive_from: true
      require_for_create: true
      location:
        database: prod
        schema: public
        table: products
        column: name

    PaymentGateway:
      push_to: true
      receive_from: true
      require_for_create: true
      location:
        object: product
        field: name

    DataWarehouse:
      push_to: true
      require_for_create: true
      location:
        database: analytics
        schema: public
        table: products
        column: name

  ### Default Price ###
  default_price:
    type: string
    ProdDB:
      push_to: true
      require_for_create: true
      location: 
        database: prod
        schema: public
        table: products
        column: default_price

    PaymentGateway:
      receive_from: true
      location:
        object: product
        field: default_price

    DataWarehouse:
      push_to: true
      location:
        database: analytics
        schema: public
        table: products
        column: default_price

  ### Price ###

  # This is an example showing a future feature to execute arbitrary code

  price:
    type: number

    PaymentGateway1:
      push_to: true
      receive_from: true
      require_for_create: true
      python:

        on_push: # Execute inline code or a Python file
          virtual_env: 3.11-db-drivers
          code: |
            import stripe
            stripe.Price.create(
                product=product_id,
                currency='usd',
                unit_amount=int(price * 100),  # Convert to cents
                metadata={
                    'id': product_id  # Store the product ID in metadata
                }
            )
          var_map:
            - product_id
            - price

    PaymentGateway2:
      push_to: true
      receive_from: true
      require_for_create: true
      api: # Make arbitrary API calls

        on_receive:
          route: http://example.com/api/price
          method: POST
          headers:
            Content-Type: application/json